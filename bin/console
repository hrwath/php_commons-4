#!/usr/bin/env php
<?php

/**
 * =============================================================================
 * @file        console
 * @author     Lukasz Cepowski <lukasz@cepowski.com>
 * 
 * @copyright  PHP Commons
 *              Copyright (C) 2009-2012 HellWorx Software
 *              All rights reserved.
 *              www.hellworx.com
 * =============================================================================
 */

declare(ticks = 1);
date_default_timezone_set('UTC');
error_reporting(E_ALL);
ini_set('display_startup_errors', 1);
ini_set('display_errors', 1);
set_time_limit(0);
ob_implicit_flush();

/*
 * Parse command line.
 */
$argv = $_SERVER['argv']; 
$argc = $_SERVER['argc'];
$bootstrap = null;
$params = array();
for ($i = 1; $i < $argc; $i++) {
    if ($argv[$i] == '--bootstrap') {
        $bootstrap = $argv[++$i];
    } else {
        $params[] = $argv[$i];
    }
}

/*
 * Display usage.
 */
if (count($params) == 0) {
    echo "PHP Commons Console\n";
    echo "Usage: {$argv[0]} [--bootstrap <bootstrap file>] [task class] [param1 param2 ...]\n";
    echo "--bootstrap      Custom bootstrap php file that will be loaded before console starts.\n";
    die(-1);
}

$rootPath = dirname(dirname(__FILE__));
defined('ROOT_PATH') || define('ROOT_PATH', $rootPath);

require_once $rootPath.'/src/Commons/Autoloader/DefaultAutoloader.php';
Commons\Autoloader\DefaultAutoloader::addIncludePath($rootPath.'/src');
Commons\Autoloader\DefaultAutoloader::init();

$logger = new Commons\Log\Logger;
$logger
    ->addWriter(new Commons\Log\Writer\SyslogWriter('console'))
    ->addWriter(new Commons\Log\Writer\StreamWriter());
Commons\Log\Log::setLogger($logger);

if (isset($bootstrap)) {
    require_once $bootstrap;
} 

try {
    $className = $params[0];
    Commons\Log\Log::info("Load task class '{$className}'");
    
    $console = new Commons\Console\Console();
    $console
        ->registerTask('task', $className)
        ->runTask('task', $params);
    
} catch (\Exception $e) {
    Commons\Log\Log::critical($e->getMessage());
    die(-1);
}
